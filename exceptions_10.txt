ClassificationTester(classifier=GaussianProcessClassifier(), vectorizer=HashingVectorizer()) -> MemoryError((5990, 1048576), dtype('float64'))
ClassificationTester(classifier=GaussianProcessClassifier(), vectorizer=HashingVectorizer(ngram_range=(2, 2))) -> MemoryError((5990, 1048576), dtype('float64'))
ClassificationTester(classifier=GaussianProcessClassifier(), vectorizer=HashingVectorizer(ngram_range=(1, 2))) -> MemoryError((5990, 1048576), dtype('float64'))
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=CountVectorizer()) -> ValueError('could not broadcast input array from shape (10,3,1192) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=CountVectorizer(ngram_range=(2, 2))) -> ValueError('could not broadcast input array from shape (10,3,1829) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=CountVectorizer(ngram_range=(1, 2))) -> ValueError('could not broadcast input array from shape (10,3,3020) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=HashingVectorizer()) -> ValueError('could not broadcast input array from shape (10,3,1048577) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=HashingVectorizer(ngram_range=(2, 2))) -> ValueError('could not broadcast input array from shape (10,3,1048577) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=HashingVectorizer(ngram_range=(1, 2))) -> ValueError('could not broadcast input array from shape (10,3,1048577) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=TfidfVectorizer()) -> ValueError('could not broadcast input array from shape (10,3,1192) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=TfidfVectorizer(ngram_range=(2, 2))) -> ValueError('could not broadcast input array from shape (10,3,1829) into shape (10,)')
ClassificationTester(classifier=LogisticRegressionCV(), vectorizer=TfidfVectorizer(ngram_range=(1, 2))) -> ValueError('could not broadcast input array from shape (10,3,3020) into shape (10,)')
ClassificationTester(classifier=CategoricalNB(), vectorizer=CountVectorizer()) -> IndexError('index 2 is out of bounds for axis 1 with size 2')
ClassificationTester(classifier=CategoricalNB(), vectorizer=CountVectorizer(ngram_range=(2, 2))) -> IndexError('index 2 is out of bounds for axis 1 with size 2')
ClassificationTester(classifier=CategoricalNB(), vectorizer=CountVectorizer(ngram_range=(1, 2))) -> IndexError('index 2 is out of bounds for axis 1 with size 2')
ClassificationTester(classifier=CategoricalNB(), vectorizer=HashingVectorizer()) -> MemoryError((5990, 1048576), dtype('int32'))
ClassificationTester(classifier=CategoricalNB(), vectorizer=HashingVectorizer(ngram_range=(2, 2))) -> MemoryError((5990, 1048576), dtype('int32'))
ClassificationTester(classifier=CategoricalNB(), vectorizer=HashingVectorizer(ngram_range=(1, 2))) -> MemoryError((5990, 1048576), dtype('int32'))
ClassificationTester(classifier=CategoricalNB(), vectorizer=TfidfVectorizer(ngram_range=(2, 2))) -> IndexError('index 1 is out of bounds for axis 1 with size 1')
ClassificationTester(classifier=ComplementNB(), vectorizer=HashingVectorizer()) -> ValueError('Negative values in data passed to ComplementNB (input X)')
ClassificationTester(classifier=ComplementNB(), vectorizer=HashingVectorizer(ngram_range=(2, 2))) -> ValueError('Negative values in data passed to ComplementNB (input X)')
ClassificationTester(classifier=ComplementNB(), vectorizer=HashingVectorizer(ngram_range=(1, 2))) -> ValueError('Negative values in data passed to ComplementNB (input X)')
ClassificationTester(classifier=GaussianNB(), vectorizer=HashingVectorizer()) -> MemoryError((5990, 1048576), dtype('float64'))
ClassificationTester(classifier=GaussianNB(), vectorizer=HashingVectorizer(ngram_range=(2, 2))) -> MemoryError((5990, 1048576), dtype('float64'))
ClassificationTester(classifier=GaussianNB(), vectorizer=HashingVectorizer(ngram_range=(1, 2))) -> MemoryError((5990, 1048576), dtype('float64'))
ClassificationTester(classifier=MultinomialNB(), vectorizer=HashingVectorizer()) -> ValueError('Negative values in data passed to MultinomialNB (input X)')
ClassificationTester(classifier=MultinomialNB(), vectorizer=HashingVectorizer(ngram_range=(2, 2))) -> ValueError('Negative values in data passed to MultinomialNB (input X)')
ClassificationTester(classifier=MultinomialNB(), vectorizer=HashingVectorizer(ngram_range=(1, 2))) -> ValueError('Negative values in data passed to MultinomialNB (input X)')
ClassificationTester(classifier=NuSVC(), vectorizer=CountVectorizer()) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=CountVectorizer(ngram_range=(2, 2))) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=CountVectorizer(ngram_range=(1, 2))) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=HashingVectorizer()) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=HashingVectorizer(ngram_range=(2, 2))) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=HashingVectorizer(ngram_range=(1, 2))) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=TfidfVectorizer()) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=TfidfVectorizer(ngram_range=(2, 2))) -> ValueError(b'specified nu is infeasible')
ClassificationTester(classifier=NuSVC(), vectorizer=TfidfVectorizer(ngram_range=(1, 2))) -> ValueError(b'specified nu is infeasible')
